{"version":3,"sources":["webpack:///src/app/forget-password/forget-password.component.html","webpack:///src/app/login/login.page.html","webpack:///src/app/sign-up/sign-up.component.html","webpack:///src/app/forget-password/forget-password.component.scss","webpack:///src/app/forget-password/forget-password.component.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts","webpack:///src/app/sign-up/sign-up.component.scss","webpack:///src/app/sign-up/sign-up.component.ts"],"names":["ForgetPasswordComponent","authService","loadingController","toastCtrl","forgetPasswordStatus","childStatus","emit","value","create","spinner","message","loading","present","forgotUidCheck","user_id","pipe","dismiss","subscribe","data","console","log","showSuccesToast","duration","position","toast","logout","selector","template","routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","schemas","LoginPage","jwtHelper","router","loginAuth","swasthStorage","rememberMe","userType","signUpStatus","welcomePageStatus","familyMembers","LOGINUSER_PROFILE","getPtCircleList","event","rememberValue","login","checkAccountType","err","handleError","tokendata","authDetail","decodeToken","getPrimaryUserProfile","UID","patientDetails","accountType","getFamilyMember","userID","length","navigateByUrl","setStorage","response","error","status","statusText","SignUpComponent","alertCtrl","platform","datepipe","pt","circlePatientProfile","circlePatientLogin","ConfirmPassword","mobnumPattern","CurrentDate","Date","tenantID","createdDateTime","ptFirstName","ptLastName","ptAadharNo","ptMaritalStatus","ptDob","ptAge","age1","ptMobileNo","ptEmailID","ptBloodGroup","ptGender","ptCountry","ptAllergies","ptEmergencyContactName","ptEmergencyContactNo","ptEmergencyEmailID","ptEmergencyRelationship","tenant_id","role_id","user_type","userPassword","password","created_date_time","circlesignup","jwt","header","buttons","text","handler","alert","value1","dob","latest_date","transform","dobdate","dobdate1","oneDay","timeDiff","Math","round","abs","getTime","age","floor","providers"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-row class=\\\"login-grid\\\">\\n  <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"5\\\" sizeXl=\\\"4\\\">\\n    <div class=\\\"c-card\\\">\\n      <div class=\\\"login-logo\\\">\\n        <img src=\\\"{{authService.logo_url}}\\\" class=\\\"login-logo__img\\\">\\n        <h1 class=\\\"login-logo__text\\\">To Reset Your Password</h1>\\n      </div>\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"forgot(form.value)\\\" novalidate>\\n        <div class=\\\"c-form__field\\\">\\n          <input type=\\\"text\\\" class=\\\"c-form__input\\\" placeholder=\\\"Enter UID / Mobile No\\\" type=\\\"text\\\" name=\\\"user_id\\\" ngModel required #user_id=\\\"ngModel\\\"\\n            [class.invalid]=\\\"user_id.errors && user_id.dirty\\\">\\n          <ion-item class=\\\"error-message\\\" *ngIf=\\\"user_id.errors?.required && user_id.dirty\\\">UID is required</ion-item>\\n        </div>\\n        <div class=\\\"c-form__field\\\">\\n          <button type=\\\"submit\\\" class=\\\"c-button c-button--primary c-button--fullwidth\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"login-paragraph\\\">\\n      <div class=\\\"login-paragraph__text\\\">\\n        You Know Password <a (click)=\\\"login()\\\" class=\\\"login-paragraph__link\\\">Login</a>\\n      </div>\\n    </div>\\n  </ion-col>\\n</ion-row>\\n  \\n\";","export default \"<ion-content>\\n  <ion-grid fixed>\\n    <ion-row class=\\\"login-grid\\\" *ngIf=\\\"!signUpStatus && !forgetPasswordStatus && welcomePageStatus\\\">\\n      <ion-col size=\\\"12\\\">\\n        <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\n          <ion-slide>\\n            <div class=\\\"welcome\\\">\\n              <div class=\\\"welcome-logo\\\">\\n                <img src=\\\"{{authService.logo_url}}\\\" class=\\\"welcome-logo__img\\\">\\n              </div>\\n              <h1>Welcome to Swasth</h1>\\n              <h5>Always have a network of doctors at the comfort of your home</h5>\\n            </div>    \\n          </ion-slide>\\n          <ion-slide>\\n            <h1>Slide 2</h1>\\n          </ion-slide>\\n          <ion-slide>\\n            <h1>Slide 3</h1>\\n          </ion-slide>\\n        </ion-slides>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\" offsetMd=\\\"3\\\">\\n            <div style=\\\"margin-top: 45px;\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <button type=\\\"submit\\\" class=\\\"c-button c-button--fullwidth\\\" style=\\\"border-radius: 20px;font-size: 17px;\\\" (click)=\\\"signup()\\\">Join Now</button>\\n              </div>\\n              <div class=\\\"login-paragraph\\\">\\n                <div class=\\\"login-paragraph__text\\\">\\n                  Already have an account? <a (click)=\\\"linkLogin()\\\" class=\\\"login-paragraph__link\\\">Login</a>\\n                </div>\\n              </div>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row class=\\\"login-grid\\\" *ngIf=\\\"signUpStatus\\\">\\n      <ion-col size=\\\"12\\\">\\n        <app-sign-up [signUpStatus]=\\\"signUpStatus\\\" (childStatus)=\\\"signUpToLogin($event)\\\"></app-sign-up>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row class=\\\"login-grid\\\" *ngIf=\\\"!signUpStatus && !forgetPasswordStatus && !welcomePageStatus\\\">\\n      <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\" sizeLg=\\\"5\\\" sizeXl=\\\"4\\\">\\n        <div class=\\\"login-c-card\\\">\\n          <div class=\\\"login-logo\\\">\\n            <img src=\\\"{{authService.logo_url}}\\\" class=\\\"login-logo__img\\\">\\n            <h1 class=\\\"login-logo__text\\\">Login to Swasth</h1>\\n          </div>\\n          <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login(form.value)\\\" novalidate>\\n            <div class=\\\"c-form__field\\\">\\n              <input type=\\\"text\\\" class=\\\"c-form__input\\\" placeholder=\\\"Mobile\\\" type=\\\"text\\\" name=\\\"mobileNumber\\\" ngModel required #user_id=\\\"ngModel\\\" [class.invalid]=\\\"user_id.errors && user_id.dirty\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"user_id.errors?.required && user_id.dirty\\\"> Mobile Number is required</ion-item>\\n            </div>\\n            <div class=\\\"c-form__field\\\">\\n              <input type=\\\"password\\\" class=\\\"c-form__input\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" ngModel required #password=\\\"ngModel\\\" [class.invalid]=\\\"password.errors && password.dirty\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"password.errors?.required && password.dirty\\\">Password is required</ion-item>\\n            </div>\\n            <div class=\\\"login-paragraph\\\">\\n              <div class=\\\"login-paragraph__remember\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"rememberMe\\\" #rememberme=\\\"ngModel\\\" [(ngModel)]=\\\"rememberMe\\\"> Remember Me\\n              </div>\\n            </div>  \\n            <div class=\\\"c-form__field\\\">\\n              <button type=\\\"submit\\\" class=\\\"c-button c-button--primary c-button--fullwidth\\\">Login</button>\\n            </div>\\n            <div class=\\\"c-form__field\\\">\\n              <div class=\\\"login-paragraph\\\">\\n                <a class=\\\"login-paragraph__link\\\" (click)=\\\"forgot()\\\">Can't access account? Contact us at hello@swasth.tech</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n        <div class=\\\"login-paragraph\\\">\\n          <div class=\\\"login-paragraph__text\\\">\\n            Don't have an account <a (click)=\\\"signup()\\\" class=\\\"login-paragraph__link\\\">Sign Up</a>\\n          </div>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row *ngIf=\\\"forgetPasswordStatus\\\">\\n      <ion-col size=\\\"12\\\">\\n        <app-forget-password [forgetPasswordStatus]=\\\"forgetPasswordStatus\\\" (childStatus)=\\\"forgetPassToLogin($event)\\\"></app-forget-password>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<!-- Global site tag (gtag.js) - Google Analytics -->\\n<script async src=\\\"https://www.googletagmanager.com/gtag/js?id=UA-137257123-1\\\"></script>\\n<script>\\nwindow.dataLayer = window.dataLayer || [];\\nfunction gtag(){dataLayer.push(arguments);}\\ngtag('js', new Date());\\ngtag('config', 'UA-137257123-1');\\n</script>\";","export default \"<ion-row class=\\\"login-grid\\\">\\n  <ion-col size=\\\"12\\\" sizeLg=\\\"8\\\">\\n    <div class=\\\"c-card\\\">\\n      <div class=\\\"login-logo\\\">\\n        <img src=\\\"{{authService.logo_url}}\\\" class=\\\"login-logo__img\\\">\\n        <h1 class=\\\"login-logo__text\\\">Sign Up to Swasth</h1>\\n      </div>\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"signup(form.value)\\\" novalidate>\\n        <ion-row>\\n          <ion-col>\\n            <label class=\\\"c-form__label\\\" >Key: <span style=\\\"color:#f53d3d;\\\">* Fields are mandatory</span></label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\" for=\\\"first_name\\\">First Name<sup>*</sup></label>\\n              <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptFirstName\\\" ngModel required #ptFirstName=\\\"ngModel\\\"\\n                [class.invalid]=\\\"ptFirstName.errors && ptFirstName.dirty\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptFirstName.errors?.required && ptFirstName.dirty\\\">\\n                First Name is required\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\" for=\\\"last_name\\\">Last Name<sup>*</sup></label>\\n              <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptLastName\\\" ngModel required #ptLastName=\\\"ngModel\\\"\\n                [class.invalid]=\\\"ptLastName.errors && ptLastName.dirty\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptLastName.errors?.required && ptLastName.dirty\\\">\\n                Last Name is required\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\" for=\\\"dob\\\">DOB<sup>*</sup></label>\\n              <input type=\\\"date\\\" class=\\\"c-form__input\\\" name=\\\"ptDob\\\" displayFormat=\\\"DD/MM/YYYY\\\" ngModel required #ptDob=\\\"ngModel\\\"\\n                [class.invalid]=\\\"ptDob.errors && ptDob.dirty\\\" (change)=\\\"getAge(ptDob.value)\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptDob.errors?.required && ptDob.dirty\\\">\\n                Date of birth is required\\n              </ion-item>   \\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\" for=\\\"last_name\\\">Email<sup>*</sup></label>\\n              <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptEmailID\\\" ngModel required #ptEmailID=\\\"ngModel\\\"\\n                [class.invalid]=\\\"ptEmailID.errors && ptEmailID.dirty\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptEmailID.errors?.required && ptEmailID.dirty\\\">\\n                Email Id is required\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <!-- <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\" for=\\\"blood_group\\\">Blood Group</label>\\n              <select class=\\\"c-form__select\\\" name=\\\"ptBloodGroup\\\" ngModel #ptBloodGroup=\\\"ngModel\\\" [class.invalid]=\\\"ptBloodGroup.errors?.required && ptBloodGroup.dirty\\\">\\n                <option disabled>--Select--</option>\\n                <option>O+</option>\\n                <option>O-</option>\\n                <option>A+</option>\\n                <option>A-</option>\\n                <option>B+</option>\\n                <option>B-</option>\\n                <option>AB+</option>\\n                <option>AB-</option>\\n              </select>\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptBloodGroup.errors?.required && ptBloodGroup.dirty\\\">\\n                Blood Group is required\\n              </ion-item>\\n            </div>\\n          </ion-col> -->\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\">Sex<sup>*</sup></label>\\n            </div>\\n            <ion-list radio-group class=\\\"gender-list\\\">\\n              <ion-row>\\n                <ion-col size size-md padding-right>\\n                  <div class=\\\"c-form__field\\\">\\n                    <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Male\\\"> Male</label>\\n                  </div>\\n                </ion-col>\\n                <ion-col size size-md padding-right>\\n                  <div class=\\\"c-form__field\\\">\\n                    <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Female\\\"> Female</label>\\n                  </div>\\n                </ion-col>\\n                <ion-col size size-md  padding-right>\\n                  <div class=\\\"c-form__field\\\">\\n                    <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Others\\\"> Others</label>\\n                  </div>\\n                </ion-col>\\n              </ion-row>\\n            </ion-list>\\n            <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptGender.errors?.required && ptGender.dirty\\\">\\n              Gender is required\\n            </ion-item>\\n          </ion-col>\\n        \\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\" for=\\\"pt_mobile_no\\\">Mobile<sup>*</sup></label>\\n              <input type=\\\"number\\\" class=\\\"c-form__input\\\" class=\\\"c-form__input\\\"  name=\\\"ptMobileNo\\\" ngModel required=\\\"\\\" #ptMobileNo=\\\"ngModel\\\" [class.invalid]=\\\"ptMobileNo.errors && ptMobileNo.dirty\\\" [pattern]=\\\"mobnumPattern\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptMobileNo.errors?.required && ptMobileNo.dirty\\\">\\n                Mobile Number is required\\n              </ion-item>\\n              <div *ngIf=\\\"ptMobileNo.errors && !isValidFormSubmitted\\\" [ngClass] = \\\"'error'\\\"> \\n                <ion-item *ngIf=\\\"ptMobileNo.errors.pattern\\\" class=\\\"error-message\\\"> \\n                Mobile number not valid.\\n                </ion-item>  \\n              </div>\\n            </div>\\n          </ion-col>\\n\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\" for=\\\"password\\\" >Password<sup>*</sup></label>\\n              <input type=\\\"password\\\" class=\\\"c-form__input\\\" name=\\\"password\\\" ngModel required #password=\\\"ngModel\\\"\\n                [class.invalid]=\\\"password.errors && password.dirty\\\" (blur)=\\\"checkPassword(pt_confirm_password.value,password.value)\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"password.errors?.required && password.dirty\\\">\\n                Password is required\\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <label class=\\\"c-form__label\\\" for=\\\"pt_confirm_password\\\">Confirm Password<sup>*</sup></label>\\n              <input type=\\\"password\\\" class=\\\"c-form__input\\\" class=\\\"c-form__input\\\" name=\\\"pt_confirm_password\\\" \\n                ngModel required #pt_confirm_password=\\\"ngModel\\\" [class.invalid]=\\\"pt_confirm_password.errors && pt_confirm_password.dirty\\\" (blur)=\\\"checkPassword(pt_confirm_password.value,password.value)\\\">\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"pt_confirm_password.errors?.required && pt_confirm_password.dirty\\\">\\n                Confirm Password is required\\n              </ion-item>\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"!ConfirmPassword\\\">\\n                Password Mismatch \\n              </ion-item>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <div class=\\\"c-form__field\\\">\\n              <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Create an Account</ion-button>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n      </form>\\n    </div>\\n    <div class=\\\"login-paragraph\\\">\\n      <div class=\\\"login-paragraph__text\\\">\\n        Already have an account? <a (click)=\\\"linkLogin()\\\" class=\\\"login-paragraph__link\\\">Login</a>\\n      </div>\\n    </div>\\n  </ion-col>\\n</ion-row>\\n\\n\\n\";","export default \".c-card {\\n  margin-top: 150px;\\n  margin-bottom: 20px;\\n  padding: 15px;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\\n  background-color: #fff;\\n  border-radius: 15px;\\n}\\n.c-card > *:last-child {\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9yZ2V0LXBhc3N3b3JkL0Y6XFxzd2FzdGhcXHN3YXN0aHZpcnR1YWxwYXRpZW50L3NyY1xcYXBwXFxmb3JnZXQtcGFzc3dvcmRcXGZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0Esd0NBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0FDQ0o7QURBSTtFQUNJLGdCQUFBO0FDRVIiLCJmaWxlIjoic3JjL2FwcC9mb3JnZXQtcGFzc3dvcmQvZm9yZ2V0LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmMtY2FyZCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxNTBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gICAgPiAqOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbn1cclxuIiwiLmMtY2FyZCB7XG4gIG1hcmdpbi10b3A6IDE1MHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBwYWRkaW5nOiAxNXB4O1xuICBib3gtc2hhZG93OiAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuLmMtY2FyZCA+ICo6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59Il19 */\";","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss'],\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n  @Input() forgetPasswordStatus=true;\n  @Output() childStatus=new EventEmitter<boolean>();\n\n  constructor(private readonly authService: AuthService,private readonly loadingController: LoadingController,private readonly toastCtrl: ToastController) { }\n\n  ngOnInit() {}\n  \n  // to login page\n  login() {\n    this.childStatus.emit(false);\n    this.forgetPasswordStatus=false;\n  }\n\n  async forgot(value: any) {\n    let loading = await this.loadingController.create({\n      spinner: 'bubbles',\n      message: 'Validating UID ...'\n    });\n\n    await loading.present();\n    this.authService\n    .forgotUidCheck(value.user_id)\n    .pipe(finalize(() => loading.dismiss()))\n    .subscribe(data=>{\n    \tif(data!=null)\n    \t{\n    \t\tconsole.log(data);\n    \t}\n    \telse\n    \t{\t\n    \t\tthis.showSuccesToast();\n    \t}\n    });\n  }\n\n  private async showSuccesToast() {\n    // console.log(\"Response Message======\"+data);      \n    const toast = await this.toastCtrl.create({\n      message: 'Invalid User ID',\n      duration: 3000,\n      position: 'bottom'\n    });\n\n    await toast.present();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { SignUpComponent } from \"./../sign-up/sign-up.component\";\nimport { ForgetPasswordComponent } from \"./../forget-password/forget-password.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage,\n    SignUpComponent,\n    ForgetPasswordComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class LoginPageModule {}\n","export default \"ion-content {\\n  --ion-background-color: linear-gradient(120deg, #00b3ea, #00db89);\\n}\\n\\n.welcome {\\n  margin-top: 130px;\\n  margin-bottom: 100px;\\n  text-align: center;\\n}\\n\\n.welcome h1 {\\n  text-align: center;\\n  color: #fff;\\n  text-shadow: 1px 1px 3px #000000;\\n}\\n\\n.welcome h5 {\\n  padding: 15px;\\n  color: #222222;\\n}\\n\\n.welcome-logo {\\n  display: inline-block;\\n}\\n\\n.welcome-logo__img {\\n  width: 110px;\\n  height: 110px;\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRjpcXHN3YXN0aFxcc3dhc3RodmlydHVhbHBhdGllbnQvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiLCJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUVJLGlFQUFBO0FDSEo7O0FES0E7RUFDSSxpQkFBQTtFQUNBLG9CQUFBO0VBQ0Esa0JBQUE7QUNGSjs7QURHSTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGdDQUFBO0FDRFI7O0FER0k7RUFDSSxhQUFBO0VBQ0EsY0FBQTtBQ0RSOztBREdJO0VBQ0kscUJBQUE7QUNEUjs7QURFUTtFQUNJLFlBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7QUNBWiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRmb250LWhlYWRpbmc6ICdNdWxpJywgc2Fucy1zZXJpZjtcclxuJGZvbnQtYm9keTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcblxyXG5pb24tY29udGVudCB7XHJcbiAgICAvLyAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LWJnKTtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IGxpbmVhci1ncmFkaWVudCgxMjBkZWcsICMwMGIzZWEsICMwMGRiODkpO1xyXG59XHJcbi53ZWxjb21lIHtcclxuICAgIG1hcmdpbi10b3A6IDEzMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBoMXtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgdGV4dC1zaGFkb3c6IDFweCAxcHggM3B4ICMwMDAwMDA7XHJcbiAgICB9XHJcbiAgICBoNSB7XHJcbiAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICBjb2xvcjogIzIyMjIyMjtcclxuICAgIH1cclxuICAgICYtbG9nbyB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMTBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMTBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCAjMDBiM2VhLCAjMDBkYjg5KTtcbn1cblxuLndlbGNvbWUge1xuICBtYXJnaW4tdG9wOiAxMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi53ZWxjb21lIGgxIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggM3B4ICMwMDAwMDA7XG59XG4ud2VsY29tZSBoNSB7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIGNvbG9yOiAjMjIyMjIyO1xufVxuLndlbGNvbWUtbG9nbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi53ZWxjb21lLWxvZ29fX2ltZyB7XG4gIHdpZHRoOiAxMTBweDtcbiAgaGVpZ2h0OiAxMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {NavController, LoadingController, NavParams, ToastController, Platform} from '@ionic/angular';\r\nimport {finalize} from 'rxjs/operators';\r\nimport { AuthService } from \"../auth.service\";\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NavigationExtras } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { LoginAuthService } from '../services/login-auth.service';\r\nimport { SwasthStorageService } from '../storage/swasth-storage.service';\r\n\r\nimport * as firebase from 'Firebase';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  rememberMe=true;\r\n  userType=\"\";  \r\n  signUpStatus=false;\r\n  forgetPasswordStatus=false;\r\n  welcomePageStatus=true;\r\n  patientDetails:any;\r\n  familyMembers: any = [];\r\n  LOGINUSER_PROFILE = \"patient_profile\";\r\n\r\n  //ref = firebase.database().ref('autorefresh/chatupdate');\r\n\r\n  constructor(private readonly loadingController: LoadingController,private readonly authService: AuthService,private readonly toastCtrl: ToastController,\r\n    private readonly jwtHelper: JwtHelperService,private router: Router, private loginAuth: LoginAuthService,\r\n    private swasthStorage: SwasthStorageService) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.ref.on('value', resp => {\r\n    //   console.log(\"values---->\", resp.val());\r\n    //   this.fncheck();\r\n    // });\r\n\r\n  }\r\n\r\n  fncheck() {\r\n    this.authService.getPtCircleList('cvinoth03')\r\n    .subscribe(data => {      \r\n      console.log(\"res--\", data);\r\n    });\r\n  }\r\n\r\n  // to signup component\r\n  signup() {\r\n    this.welcomePageStatus=false\r\n    this.signUpStatus=true;\r\n  }\r\n\r\n  // signup component to login page\r\n  signUpToLogin(event) {\r\n    this.signUpStatus=event;\r\n  }\r\n\r\n  // to forget password component\r\n  forgot() {\r\n    this.forgetPasswordStatus=true;\r\n  }\r\n\r\n  // forgetpassword component to login page\r\n  forgetPassToLogin(event) {\r\n    this.forgetPasswordStatus=event;\r\n  }\r\n\r\n  // welcome page to login page\r\n  linkLogin() {\r\n    this.welcomePageStatus=false;\r\n  }\r\n\r\n  // for user login\r\n  async login(value: any) {\r\n   console.log(this.userType);\r\n    let loading = await this.loadingController.create({\r\n      spinner: 'bubbles',\r\n      message: 'Logging in ...'\r\n    });\r\n    let rememberValue:any=0;\r\n    if(value.rememberMe)\r\n    {\r\n      rememberValue=1;\r\n    }\r\n    await loading.present();\r\n    console.log(value,rememberValue);\r\n    this.loginAuth\r\n    .login(value,rememberValue)\r\n    .pipe(finalize(() => loading.dismiss()))\r\n    .subscribe((data) => {\r\n      // console.log(\"login data\",data);\r\n      if(data=='NOTEXISTS'){  \r\n        this.showSuccesToast(data);\r\n      }else {   \r\n        this.checkAccountType(data);     \r\n        //this.checkPatientCircleStatus(data);\r\n        //this.router.navigateByUrl('/pt-profile');\r\n        //this.router.navigateByUrl('/familymembers');\r\n      }\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      this.handleError(err);\r\n    });\r\n  }\r\n\r\n  checkAccountType(tokendata)\r\n  {\r\n    const authDetail = this.jwtHelper.decodeToken(tokendata);\r\n    console.log(\"token data--\", authDetail);\r\n    this.authService\r\n    .getPrimaryUserProfile(authDetail.UID)\r\n    .subscribe(data=>{\r\n      this.patientDetails=data;\r\n      console.log(\"Patient Details==>\",data);\r\n      let accountType=this.patientDetails.accountType;\r\n      if(accountType==\"Family\")\r\n      {\r\n        this.authService\r\n          .getFamilyMember(this.patientDetails.userID)\r\n          .subscribe(data => {\r\n            this.familyMembers=data;\r\n            if(this.familyMembers.length>0)\r\n            {\r\n              this.router.navigateByUrl('/familymembers');\r\n            }\r\n            else\r\n            {\r\n              this.swasthStorage.setStorage(this.LOGINUSER_PROFILE, this.patientDetails);\r\n              this.router.navigateByUrl('/pt-profile');\r\n            }\r\n          });\r\n      }\r\n      else if(accountType==\"Normal\")\r\n      {\r\n        this.swasthStorage.setStorage(this.LOGINUSER_PROFILE, this.patientDetails);\r\n              this.router.navigateByUrl('/pt-profile');\r\n        this.router.navigateByUrl('/pt-profile');\r\n      }\r\n      else\r\n      {\r\n        this.swasthStorage.setStorage(this.LOGINUSER_PROFILE, this.patientDetails);\r\n        this.router.navigateByUrl('/pt-profile');\r\n        this.router.navigateByUrl('/pt-profile');\r\n      }\r\n    });\r\n  }\r\n\r\n  checkPatientCircleStatus(tokendata) {\r\n    const authDetail = this.jwtHelper.decodeToken(tokendata);\r\n    console.log(\"token data--\", authDetail);\r\n    this.authService.getPtCircleList(authDetail.UID)\r\n    .subscribe(data => {      \r\n      console.log(\"res--\", data);\r\n      if(data != null) {        \r\n        let response:any = data;\r\n        this.router.navigateByUrl('/subscribed-doctor-circle');\r\n      } else {        \r\n        this.router.navigateByUrl('/select-virtual-hospital');\r\n      }\r\n    });    \r\n  }\r\n\r\n  private async showSuccesToast(data: string) {\r\n    // console.log(\"Response Message======\"+data);      \r\n    const toast = await this.toastCtrl.create({\r\n      message: 'Invalid User ID',\r\n      duration: 3000,\r\n      position: 'bottom'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async handleError(error: any) {\r\n    let message: string;\r\n    if (error.status && error.status === 401) {\r\n      message = 'Invalid password';\r\n    }\r\n    else {\r\n      message = `Unexpected error: ${error.statusText}`;\r\n    }\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 5000,\r\n      position: 'bottom'\r\n    });\r\n    toast.present();\r\n  }  \r\n  \r\n}\r\n","export default \".c-card {\\n  margin-top: 120px;\\n  margin-bottom: 20px;\\n  padding: 15px;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\\n  background-color: #fff;\\n  border-radius: 15px;\\n}\\n.c-card > *:last-child {\\n  margin-bottom: 0;\\n}\\n.gender-list {\\n  padding-top: 0px;\\n  padding-bottom: 0px;\\n  background: inherit;\\n}\\nion-button {\\n  width: 100%;\\n  --ion-background-color:#0059b3;\\n  border-radius: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbi11cC9GOlxcc3dhc3RoXFxzd2FzdGh2aXJ0dWFscGF0aWVudC9zcmNcXGFwcFxcc2lnbi11cFxcc2lnbi11cC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSx3Q0FBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUNDSjtBREFJO0VBQ0ksZ0JBQUE7QUNFUjtBREVBO0VBQ0ksZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FDQ0o7QURFQTtFQUNJLFdBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYy1jYXJkIHtcclxuICAgIG1hcmdpbi10b3A6IDEyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICA+ICo6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxufVxyXG5cclxuLmdlbmRlci1saXN0IHtcclxuICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xyXG4gICAgYmFja2dyb3VuZDogaW5oZXJpdDtcclxufVxyXG5cclxuaW9uLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IzAwNTliMztcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn0iLCIuYy1jYXJkIHtcbiAgbWFyZ2luLXRvcDogMTIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG59XG4uYy1jYXJkID4gKjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmdlbmRlci1saXN0IHtcbiAgcGFkZGluZy10b3A6IDBweDtcbiAgcGFkZGluZy1ib3R0b206IDBweDtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuaW9uLWJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiMwMDU5YjM7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59Il19 */\";","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { LoadingController, ToastController, AlertController, Platform } from '@ionic/angular';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AuthService } from \"../auth.service\";\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  pt: any={\r\n    circlePatientProfile:{},\r\n    circlePatientLogin:{}\r\n  }\r\n  public age1:any;\r\n  public ConfirmPassword:any=[];\r\n  mobnumPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\r\n  CurrentDate:any;\r\n  \r\n  @Input() signUpStatus=true;\r\n  @Output() childStatus=new EventEmitter<boolean>();\r\n\r\n  constructor(private readonly authService: AuthService,private readonly loadingController: LoadingController,private readonly toastCtrl: ToastController,\r\n    private readonly alertCtrl: AlertController, private platform: Platform, public datepipe: DatePipe) { \r\n      this.ConfirmPassword=true;\r\n      this.CurrentDate=new Date();\r\n    }\r\n\r\n  ngOnInit() {}\r\n\r\n  // signup component to login page\r\n  linkLogin() {\r\n    this.childStatus.emit(false);\r\n    this.signUpStatus=false;\r\n  }\r\n\r\n  // new user sign up\r\n  async signup(value: any) {\r\n    let loading = await this.loadingController.create({\r\n      spinner: 'bubbles',\r\n      message: 'Signing up ...'\r\n    });\r\n    await loading.present();\r\n    // console.log(value);\r\n    value.tenantID=\"1\";\r\n    value.createdDateTime=new Date();\r\n\r\n    this.pt.circlePatientProfile={\r\n      tenantID: \"1\",     \r\n      ptFirstName: value.ptFirstName,  \r\n      ptLastName: value.ptLastName,  \r\n      ptAadharNo: value.ptAadharNo,  \r\n      ptMaritalStatus: value.ptMaritalStatus,  \r\n      ptDob: value.ptDob,  \r\n      ptAge: this.age1,  \r\n      ptMobileNo: value.ptMobileNo,  \r\n      ptEmailID: value.ptEmailID,  \r\n      ptBloodGroup: value.ptBloodGroup,  \r\n      ptGender: value.ptGender,  \r\n      ptCountry: value.ptCountry, \r\n      ptAllergies: value.ptAllergies, \r\n      ptEmergencyContactName: value.ptEmergencyContactName,  \r\n      ptEmergencyContactNo: value.ptEmergencyContactNo,  \r\n      ptEmergencyEmailID: value.ptEmergencyEmailID,  \r\n      ptEmergencyRelationship: value.ptEmergencyRelationship,\r\n      createdDateTime: new Date(),  \r\n      status: \"Active\"\r\n    };\r\n    console.log(\"circle patient\", this.pt.circlePatientProfile);\r\n    this.pt.circlePatientLogin={\r\n      tenant_id: \"1\",\r\n      role_id: \"1\",\r\n      user_type: \"Patient\",\r\n      userPassword:value.password,\r\n      created_date_time: new Date()\r\n    };\r\n\r\n    // this.pt.addressEntity = {\r\n    //   addressLine1:value.addressline1,\r\n    //   addressLine2:value.addressline2,\r\n    //   city:value.city,\r\n    //   state:value.state,\r\n    //   country:value.ptCountry,\r\n    //   postalCode:value.postalCode,\r\n    //   createdDateTime: new Date(),\r\n    //   status:'Active'\r\n    // }\r\n    // console.log(\"post value ......\"+JSON.stringify(this.pt));\r\n    this.authService\r\n    .circlesignup(this.pt)\r\n    .pipe(finalize(() => loading.dismiss()))\r\n    .subscribe(        \r\n      (jwt) => this.showSuccesToast(jwt),\r\n      err => this.handleError(err)\r\n    );\r\n  }\r\n\r\n  // toast controller alert\r\n  private async showSuccesToast(jwt) {\r\n    // console.log(\"Response Message======\"+jwt);\r\n    if (jwt !== 'EXISTS') {      \r\n      let alert = await this.alertCtrl.create({\r\n        header: 'You have successfully registered',\r\n        message: 'You can log in using your registered mobile number',\r\n        buttons: [{\r\n          text: 'OK', \r\n          handler: () => {              \r\n            this.childStatus.emit(false);\r\n          }\r\n        }]\r\n      });\r\n      await alert.present();\r\n      /*const toast = this.toastCtrl.create({\r\n        message: 'Sign up successful',\r\n        duration: 3000,\r\n        position: 'bottom'\r\n      });\r\n      toast.present();*/\r\n    }    \r\n    else {\r\n      const toast = await this.toastCtrl.create({\r\n        message: 'Username already registered',\r\n        duration: 3000,\r\n        position: 'bottom'\r\n      });\r\n      await toast.present();\r\n      // this.usernameModel.control.setErrors({'usernameTaken': true});\r\n    }\r\n  }\r\n\r\n  async handleError(error: any) {\r\n    let message = `Unexpected error occurred`;\r\n    const toast = await this.toastCtrl.create({\r\n      message,\r\n      duration: 5000, \r\n      position: 'bottom'\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  // check confirm password match\r\n  checkPassword (value:string,value1:string){\r\n    if(value!=value1)\r\n    {\r\n      this.ConfirmPassword=false;\r\n    }\r\n    else{\r\n      this.ConfirmPassword=true;\r\n    }\r\n  }\r\n\r\n  // calculate age of patient\r\n  getAge(dob:Date) {\r\n    //console.log(dob);\r\n    let latest_date =this.datepipe.transform(this.CurrentDate, 'yyyy-MM-dd');\r\n    //console.log(\"Current Date==\"+latest_date);\r\n    let dobdate= new Date(dob);\r\n    let dobdate1= new Date(latest_date);\r\n    // console.log(\"Current Date==\"+dobdate);\r\n    //current_date=Date.now();\r\n    var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds \r\n    var timeDiff = Math.round(Math.abs((dobdate1.getTime() - dobdate.getTime())/(oneDay)));       \r\n    //var diffDays = Math.round(Math.abs((dobdate.getTime() - current_date.getTime())/(oneDay)));\r\n    var age=(timeDiff/365);\r\n    this.age1=Math.floor(age);\r\n    /*console.log(\"Age==\"+(timeDiff/365));*/\r\n  }\r\n\r\n}\r\n"]}