{"version":3,"sources":["webpack:///src/app/subscribe-family-member/subscribe-family-member.page.html","webpack:///src/app/subscribe-family-member/subscribe-family-member-routing.module.ts","webpack:///src/app/subscribe-family-member/subscribe-family-member.module.ts","webpack:///src/app/subscribe-family-member/subscribe-family-member.page.scss","webpack:///src/app/subscribe-family-member/subscribe-family-member.page.ts"],"names":["routes","path","component","SubscribeFamilyMemberPageRoutingModule","imports","forChild","exports","SubscribeFamilyMemberPageModule","declarations","SubscribeFamilyMemberPage","authService","loadingController","toastCtrl","alertCtrl","platform","datepipe","jwtHelper","swStorage","loginAuth","storage","router","ConfirmPassword","mobnumPattern","familyMemberObj","familyMembersDetails","newLogin","ref","data","roomname","familyMemberCount","resultCount","CurrentDate","Date","getStorage","LOGINUSER_PROFILE","then","userdetail","undefined","getCircleCode","userID","accountType","subscribe","familyMemberCircleCode","console","log","getCircleEntity","familyPrimaryMemberCircleDetails","getDoctorProfile","createdByUserId","circleAdminDocDetails","myRand","random","value","create","spinner","message","loading","present","ptFirstName","randomString","Math","toString","substring","url1","familyMemberFullName","ptLastName","ptDob","ptGender","createdByUserID","createdDateTime","status","addFamilyMember","pipe","dismiss","fmuserid1","showSuccesToast","err","handleError","ptFirstName1","url2","ptLastName1","ptDob1","ptGender1","fmuserid2","ptFirstName2","url3","ptLastName2","ptDob2","ptGender2","fmuserid3","memberuserid","url","membername","chatRoomName","docFirstName","docLastName","newData","push","set","currentroomKey","key","addCircleObj","circleCode","subscribePlanId","subscriptionType","userType","createPtChatObj","circleName","docUserID","patientUserID","patientName","createdByDateTime","videoCallLink","doctorName","chatRoomKey","addPtToCircle","createPtChat","data1","error","duration","position","toast","rand","floor","logout","navigateByUrl","selector","template"],"mappings":"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","file":"subscribe-family-member-subscribe-family-member-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n      <img src=\\\"{{authService.logo_url}}\\\" height=\\\"24\\\" style=\\\"vertical-align: middle; padding-left: 15px;\\\">\\n      <ion-title>Swasth</ion-title>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-icon name=\\\"exit-outline\\\" style=\\\"font-size: 26px;\\\" (click)=\\\"logout()\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-row>\\n    <ion-col size=\\\"12\\\">\\n      <div class=\\\"c-form__field\\\">\\n        <ion-button (click)=\\\"goFamilyMembers()\\\">Switch Profile</ion-button>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"login-grid\\\">\\n    <ion-col size=\\\"12\\\" sizeLg=\\\"8\\\">\\n      <div class=\\\"c-card\\\">        \\n        <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"addFamilyMember(form.value)\\\" novalidate>  \\n\\n          <!-- Family Member 1-->\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n            <h1 class=\\\"login-logo__text\\\">Family Member 1</h1>\\n            </ion-col>\\n          </ion-row>        \\n          <ion-row>            \\n            <ion-col>\\n              <label class=\\\"c-form__label\\\" >Key: <span style=\\\"color:#f53d3d;\\\">* Fields are mandatory</span></label>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row style=\\\"border: 1px solid #000000\\\">\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"first_name\\\">First Name<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptFirstName\\\" ngModel #ptFirstName=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptFirstName.errors && ptFirstName.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptFirstName.errors?.required && ptFirstName.dirty\\\">\\n                  First Name is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"last_name\\\">Last Name<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptLastName\\\" ngModel #ptLastName=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptLastName.errors && ptLastName.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptLastName.errors?.required && ptLastName.dirty\\\">\\n                  Last Name is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"dob\\\">DOB<sup>*</sup></label>\\n                <input type=\\\"date\\\" class=\\\"c-form__input\\\" name=\\\"ptDob\\\" displayFormat=\\\"DD/MM/YYYY\\\" ngModel #ptDob=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptDob.errors && ptDob.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptDob.errors?.required && ptDob.dirty\\\">\\n                  Date of birth is required\\n                </ion-item>   \\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\">Sex<sup>*</sup></label>\\n              </div>\\n              <ion-list radio-group class=\\\"gender-list\\\">\\n                <ion-row>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Male\\\"> Male</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Female\\\"> Female</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md  padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Others\\\"> Others</label>\\n                    </div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-list>\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptGender.errors?.required && ptGender.dirty\\\">\\n                Gender is required\\n              </ion-item>\\n            </ion-col> \\n          </ion-row>\\n          <!-- <ion-row>\\n            <ion-col>\\n              <label class=\\\"c-form__label\\\" >Key: <span style=\\\"color:#f53d3d;\\\">* Fields are mandatory</span></label>\\n            </ion-col>\\n          </ion-row> -->\\n          <!-- Family Member 1-->\\n          <!-- Family Member 2-->\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n            <h1 class=\\\"login-logo__text\\\">Family Member 2</h1>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row style=\\\"border: 1px solid #000000\\\">\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"first_name\\\">First Name<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptFirstName1\\\" ngModel #ptFirstName1=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptFirstName1.errors && ptFirstName1.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptFirstName1.errors?.required && ptFirstName1.dirty\\\">\\n                  First Name is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"last_name\\\">Last Name<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptLastName1\\\" ngModel #ptLastName1=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptLastName1.errors && ptLastName1.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptLastName1.errors?.required && ptLastName1.dirty\\\">\\n                  Last Name is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"dob\\\">DOB<sup>*</sup></label>\\n                <input type=\\\"date\\\" class=\\\"c-form__input\\\" name=\\\"ptDob1\\\" displayFormat=\\\"DD/MM/YYYY\\\" ngModel #ptDob1=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptDob1.errors && ptDob1.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptDob1.errors?.required && ptDob1.dirty\\\">\\n                  Date of birth is required\\n                </ion-item>   \\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\">Sex<sup>*</sup></label>\\n              </div>\\n              <ion-list radio-group class=\\\"gender-list\\\">\\n                <ion-row>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender1\\\" ngModel #ptGender1=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Male\\\"> Male</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender1\\\" ngModel #ptGender1=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Female\\\"> Female</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md  padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender1\\\" ngModel #ptGender1=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Others\\\"> Others</label>\\n                    </div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-list>\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptGender1.errors?.required && ptGender1.dirty\\\">\\n                Gender is required\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n          <!-- Family Member 2-->\\n          <!-- Family Member 3-->\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n            <h1 class=\\\"login-logo__text\\\">Family Member 3</h1>\\n            </ion-col>\\n          </ion-row>\\n          <!-- <ion-row>\\n            <ion-col>\\n              <label class=\\\"c-form__label\\\" >Key: <span style=\\\"color:#f53d3d;\\\">* Fields are mandatory</span></label>\\n            </ion-col>\\n          </ion-row> -->\\n          <ion-row style=\\\"border: 1px solid #000000\\\">\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"first_name\\\">First Name<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptFirstName2\\\" ngModel #ptFirstName2=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptFirstName2.errors && ptFirstName2.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptFirstName2.errors?.required && ptFirstName2.dirty\\\">\\n                  First Name is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"last_name\\\">Last Name<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptLastName2\\\" ngModel #ptLastName2=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptLastName.errors && ptLastName.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptLastName2.errors?.required && ptLastName2.dirty\\\">\\n                  Last Name is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"dob\\\">DOB<sup>*</sup></label>\\n                <input type=\\\"date\\\" class=\\\"c-form__input\\\" name=\\\"ptDob2\\\" displayFormat=\\\"DD/MM/YYYY\\\" ngModel #ptDob2=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptDob.errors && ptDob.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptDob2.errors?.required && ptDob2.dirty\\\">\\n                  Date of birth is required\\n                </ion-item>   \\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\">Sex<sup>*</sup></label>\\n              </div>\\n              <ion-list radio-group class=\\\"gender-list\\\">\\n                <ion-row>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender2\\\" ngModel #ptGender2=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Male\\\"> Male</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender2\\\" ngModel #ptGender2=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Female\\\"> Female</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md  padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender2\\\" ngModel #ptGender2=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Others\\\"> Others</label>\\n                    </div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-list>\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptGender2.errors?.required && ptGender2.dirty\\\">\\n                Gender is required\\n              </ion-item>\\n            </ion-col> \\n          </ion-row>\\n          <!-- <ion-row>\\n            <ion-col>\\n              <label class=\\\"c-form__label\\\" >Key: <span style=\\\"color:#f53d3d;\\\">* Fields are mandatory</span></label>\\n            </ion-col>\\n          </ion-row> -->\\n          <!-- Family Member 3-->\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Save</ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </form>\\n      </div>\\n      <div class=\\\"login-paragraph\\\">\\n        <div class=\\\"login-paragraph__text\\\">\\n          Skip now? <a (click)=\\\"goSubscribedNetwork()\\\" class=\\\"login-paragraph__link\\\">Skip</a> Add Later!\\n        </div>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SubscribeFamilyMemberPage } from './subscribe-family-member.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SubscribeFamilyMemberPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscribeFamilyMemberPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SubscribeFamilyMemberPageRoutingModule } from './subscribe-family-member-routing.module';\n\nimport { SubscribeFamilyMemberPage } from './subscribe-family-member.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SubscribeFamilyMemberPageRoutingModule\n  ],\n  declarations: [SubscribeFamilyMemberPage]\n})\nexport class SubscribeFamilyMemberPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YnNjcmliZS1mYW1pbHktbWVtYmVyL3N1YnNjcmliZS1mYW1pbHktbWVtYmVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, ToastController, AlertController, Platform } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { AuthService } from \"../auth.service\";\nimport { DatePipe } from '@angular/common';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { Storage } from \"@ionic/storage\";\nimport { SwasthStorageService } from '../storage/swasth-storage.service';\nimport { LoginAuthService } from '../services/login-auth.service';\nimport { Router } from '@angular/router';\nimport * as firebase from 'Firebase';\n\n@Component({\n  selector: 'app-subscribe-family-member',\n  templateUrl: './subscribe-family-member.page.html',\n  styleUrls: ['./subscribe-family-member.page.scss'],\n})\nexport class SubscribeFamilyMemberPage implements OnInit {\n\n  public age1: any;\n  public ConfirmPassword: any = [];\n  mobnumPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\n  CurrentDate: any;\n  familyMemberObj: any = {};\n  user: string;\n  tenantID: string;\n  userfirstLetter: string;\n  familyMembersDetails: any = {};\n  primaryUser: any;\n  familymemberId: any;\n  newLogin = \"\";\n  userType: any;\n  userdetail: any;\n  familyMemberCircleCode: any;\n  circleAdminDocDetails: any;\n  familyPrimaryMemberCircleDetails: any;\n  familyMemberFullName: any;\n  url1: string;\n  url2:string;\n  url3:string;\n  randomString: string;\n  myRand: any;\n  chatRoomName: any;\n  ref = firebase.database().ref('chatrooms/');\n  currentroomKey: any;\n  data = { roomname: '' };\n  familyMemberCount=0;\n  resultCount=0;\n\n  constructor(private readonly authService: AuthService,\n    private readonly loadingController: LoadingController,\n    private readonly toastCtrl: ToastController,\n    private readonly alertCtrl: AlertController,\n    private platform: Platform, public datepipe: DatePipe,\n    jwtHelper: JwtHelperService,\n    private swStorage: SwasthStorageService,\n    private loginAuth: LoginAuthService,\n    private readonly storage: Storage,\n    private router: Router) {\n    this.ConfirmPassword = true;\n    this.CurrentDate = new Date();\n    this.swStorage.getStorage(this.loginAuth.LOGINUSER_PROFILE).then(data => {\n      this.userdetail = data;\n      if (this.userdetail != undefined || this.userdetail != null ) {\n      this.authService\n        .getCircleCode(this.userdetail.userID, this.userdetail.accountType)\n        .subscribe(data => {\n          if (data != null) {\n            this.familyMemberCircleCode = data;\n            console.log(\"Circle Code==>\", this.familyMemberCircleCode);\n\n            this.authService\n              .getCircleEntity(this.familyMemberCircleCode)\n              .subscribe(data => {\n                this.familyPrimaryMemberCircleDetails = data;\n                console.log(\"Circle Details==>\", this.familyPrimaryMemberCircleDetails);\n                this.authService\n                  .getDoctorProfile(this.familyPrimaryMemberCircleDetails.createdByUserId)\n                  .subscribe(data => {\n                    this.circleAdminDocDetails = data;\n                    console.log(\"Circle Admin Doctor Details==>\", this.circleAdminDocDetails);\n                  });\n              });\n          }\n\n\n        });\n      }\n\n    });\n\n    // this.randomString = Math.random().toString(36).substring(7);\n    // console.log(\"Random String==>\", this.randomString);\n    // this.url = \"https://meet.jit.si/\" + this.randomString;\n    this.myRand = this.random();\n    }\n\n  ngOnInit() {\n  }\n\n  async addFamilyMember(value: any) {\n    console.log(value);\n    let loading = await this.loadingController.create({\n      spinner: 'bubbles',\n      message: 'Signing up ...'\n    });\n    await loading.present();\n\n    if(value.ptFirstName!=\"\")\n    {\n    this.familyMemberCount=this.familyMemberCount+1;\n    this.randomString = Math.random().toString(36).substring(7);\n    console.log(\"Random String==>\", this.randomString);\n    this.url1 = \"https://meet.jit.si/\" + this.randomString;\n    this.familyMemberFullName = value.ptFirstName + \" \" + value.ptLastName;\n    this.familyMemberObj.ptFirstName = value.ptFirstName;\n    this.familyMemberObj.ptLastName = value.ptLastName;\n    this.familyMemberObj.ptDob = value.ptDob;\n    this.familyMemberObj.ptGender = value.ptGender;\n    this.familyMemberObj.createdByUserID = this.userdetail.userID;\n    this.familyMemberObj.createdDateTime = new Date();\n    this.familyMemberObj.status = \"Active\";\n    console.log(\"Add Family Member Object==>\", this.familyMemberObj);\n    this.authService\n      .addFamilyMember(this.familyMemberObj)\n      .pipe(finalize(() => loading.dismiss()))\n      .subscribe(\n        (fmuserid1) =>{this.showSuccesToast(fmuserid1,this.url1,this.familyMemberFullName);\n        this.resultCount=this.resultCount+1;\n        },\n        err => this.handleError(err)\n      );\n    }\n    else if(value.ptFirstName1!=\"\")\n    {\n    this.familyMemberCount=this.familyMemberCount+1;\n    this.resultCount=0;\n    this.randomString = Math.random().toString(36).substring(7);\n    console.log(\"Random String==>\", this.randomString);\n    this.url2 = \"https://meet.jit.si/\" + this.randomString;\n    this.familyMemberFullName = value.ptFirstName1 + \" \" + value.ptLastName1;\n    this.familyMemberObj.ptFirstName = value.ptFirstName1;\n    this.familyMemberObj.ptLastName = value.ptLastName1;\n    this.familyMemberObj.ptDob = value.ptDob1;\n    this.familyMemberObj.ptGender = value.ptGender1;\n    this.familyMemberObj.createdByUserID = this.userdetail.userID;\n    this.familyMemberObj.createdDateTime = new Date();\n    this.familyMemberObj.status = \"Active\";\n    console.log(\"Add Family Member Object==>\", this.familyMemberObj);\n    this.authService\n      .addFamilyMember(this.familyMemberObj)\n      .pipe(finalize(() => loading.dismiss()))\n      .subscribe(\n        (fmuserid2) => {this.showSuccesToast(fmuserid2,this.url2,this.familyMemberFullName);\n          this.resultCount=this.resultCount+1;\n        },\n        err => this.handleError(err)\n      );\n    }\n\n    else if(value.ptFirstName2!=\"\")\n    {\n    this.familyMemberCount=this.familyMemberCount+1;\n    this.resultCount=0;\n    this.randomString = Math.random().toString(36).substring(7);\n    console.log(\"Random String==>\", this.randomString);\n    this.url3 = \"https://meet.jit.si/\" + this.randomString;\n    this.familyMemberFullName = value.ptFirstName2 + \" \" + value.ptLastName2;\n    this.familyMemberObj.ptFirstName = value.ptFirstName2;\n    this.familyMemberObj.ptLastName = value.ptLastName2;\n    this.familyMemberObj.ptDob = value.ptDob2;\n    this.familyMemberObj.ptGender = value.ptGender2;\n    this.familyMemberObj.createdByUserID = this.userdetail.userID;\n    this.familyMemberObj.createdDateTime = new Date();\n    this.familyMemberObj.status = \"Active\";\n    console.log(\"Add Family Member Object==>\", this.familyMemberObj);\n    this.authService\n      .addFamilyMember(this.familyMemberObj)\n      .pipe(finalize(() => loading.dismiss()))\n      .subscribe(\n        (fmuserid3) => {this.showSuccesToast(fmuserid3,this.url3,this.familyMemberFullName);\n          this.resultCount=this.resultCount+1;\n        },\n        err => this.handleError(err)\n      );\n    }\n    \n  }\n\n  // toast controller alert\n  private async showSuccesToast(memberuserid,url,membername) {\n    if (memberuserid != null) {\n      this.chatRoomName = this.circleAdminDocDetails.docFirstName + \" \" + this.circleAdminDocDetails.docLastName + \"-\" + this.familyMemberFullName + \" \" + this.myRand;\n      let newData = this.ref.push();\n      newData.set({\n        roomname: this.chatRoomName\n      });\n      this.currentroomKey = newData.key;\n      let addCircleObj: any = {\n        userID: memberuserid,\n        circleCode: this.familyMemberCircleCode,\n        createdDateTime: new Date(),\n        subscribePlanId: \"1\",\n        status: \"Active\",\n        subscriptionType: this.userdetail.accountType,\n        userType: \"Secondary\"\n      }\n      let createPtChatObj: any = {\n        circleCode: this.familyMemberCircleCode,\n        circleName: this.familyPrimaryMemberCircleDetails.circleName,\n        docUserID: this.circleAdminDocDetails.docUserID,\n        patientUserID: memberuserid,\n        patientName: membername,\n        createdByDateTime: new Date(),\n        videoCallLink: url,\n        status: \"Deactive\",\n        doctorName: this.circleAdminDocDetails.docFirstName + \" \" + this.circleAdminDocDetails.docLastName,\n        chatRoomName: this.chatRoomName,\n        chatRoomKey: this.currentroomKey\n      }\n\n      console.log(\"addcircle\", addCircleObj);\n      console.log(\"createchat\", createPtChatObj);\n\n      this.authService\n        .addPtToCircle(addCircleObj)\n        .subscribe(data => {\n          console.log(\"data\", data);\n          if (data != null) {\n            createPtChatObj.chatRoomKey = this.currentroomKey;\n            this.authService\n              .createPtChat(createPtChatObj)\n              .subscribe(data1 => {\n                console.log(\"data1\", data1);                \n              });\n          }\n        });      \n    }    \n  }\n\n  async handleError(error: any) {\n    let message = `Unexpected error occurred`;\n    const toast = await this.toastCtrl.create({\n      message,\n      duration: 5000,\n      position: 'bottom'\n    });\n    await toast.present();\n  }\n    \n\n  random(): number {\n    let rand = Math.floor(Math.random() * 20000) + 1;\n    return rand;\n  }\n\n  logout() {\n    this.loginAuth.logout();\n  }\n\n  goFamilyMembers()\n  {\n    this.router.navigateByUrl('/familymembers');\n  }\n\n  // addFamilyMember()\n  // {\n  //   this.router.navigateByUrl('/addfamilymember');\n  // }\n  goSubscribedNetwork()\n  {\n    this.router.navigateByUrl('/subscribed-doctor-circle');\n  }\n\n}\n"]}