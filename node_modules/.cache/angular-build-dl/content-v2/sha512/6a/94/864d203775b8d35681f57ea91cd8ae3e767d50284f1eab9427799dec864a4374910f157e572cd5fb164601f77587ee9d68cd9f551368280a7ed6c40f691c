{"version":3,"sources":["webpack:///src/app/addfamilymember/addfamilymember.page.html","webpack:///src/app/addfamilymember/addfamilymember-routing.module.ts","webpack:///src/app/addfamilymember/addfamilymember.module.ts","webpack:///src/app/addfamilymember/addfamilymember.page.scss","webpack:///src/app/addfamilymember/addfamilymember.page.ts"],"names":["routes","path","component","AddfamilymemberPageRoutingModule","imports","forChild","exports","AddfamilymemberPageModule","declarations","AddfamilymemberPage","authService","loadingController","toastCtrl","alertCtrl","platform","datepipe","jwtHelper","swStorage","loginAuth","storage","router","ConfirmPassword","mobnumPattern","familyMemberObj","familyMembersDetails","newLogin","ref","data","roomname","signUpStatus","childStatus","CurrentDate","Date","getStorage","LOGINUSER_PROFILE","then","userdetail","getCircleCode","userID","accountType","subscribe","familyMemberCircleCode","console","log","getCircleEntity","familyPrimaryMemberCircleDetails","getDoctorProfile","createdByUserId","circleAdminDocDetails","randomString","Math","random","toString","substring","url","myRand","value","create","spinner","message","loading","present","familyMemberFullName","ptFirstName","ptLastName","ptDob","ptGender","createdByUserID","createdDateTime","status","addFamilyMember","pipe","dismiss","jwt","showSuccesToast","err","handleError","chatRoomName","docFirstName","docLastName","newData","push","set","currentroomKey","key","addCircleObj","circleCode","subscribePlanId","subscriptionType","userType","createPtChatObj","circleName","docUserID","patientUserID","patientName","createdByDateTime","videoCallLink","doctorName","chatRoomKey","addPtToCircle","createPtChat","data1","navigateByUrl","error","duration","position","toast","value1","rand","floor","logout","selector","template"],"mappings":"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","file":"addfamilymember-addfamilymember-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <img src=\\\"{{authService.logo_url}}\\\" height=\\\"24\\\" style=\\\"vertical-align: middle; padding-left: 15px;\\\">\\n      <ion-title>Swasth</ion-title>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-icon name=\\\"notifications-outline\\\" style=\\\"font-size: 26px; padding-right: 20px;\\\"></ion-icon>\\n      <ion-icon name=\\\"exit-outline\\\" style=\\\"font-size: 26px;\\\" (click)=\\\"logout()\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-row class=\\\"login-grid\\\">\\n    <ion-col size=\\\"12\\\" sizeLg=\\\"8\\\">\\n      <div class=\\\"c-card\\\">\\n        <h1 class=\\\"login-logo__text\\\">Add Family Member</h1>\\n        <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"addFamilyMember(form.value)\\\" novalidate>\\n          <ion-row>\\n            <ion-col>\\n              <label class=\\\"c-form__label\\\" >Key: <span style=\\\"color:#f53d3d;\\\">* Fields are mandatory</span></label>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"first_name\\\">First Name<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptFirstName\\\" ngModel required #ptFirstName=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptFirstName.errors && ptFirstName.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptFirstName.errors?.required && ptFirstName.dirty\\\">\\n                  First Name is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"last_name\\\">Last Name<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptLastName\\\" ngModel required #ptLastName=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptLastName.errors && ptLastName.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptLastName.errors?.required && ptLastName.dirty\\\">\\n                  Last Name is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"dob\\\">DOB<sup>*</sup></label>\\n                <input type=\\\"date\\\" class=\\\"c-form__input\\\" name=\\\"ptDob\\\" displayFormat=\\\"DD/MM/YYYY\\\" ngModel required #ptDob=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptDob.errors && ptDob.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptDob.errors?.required && ptDob.dirty\\\">\\n                  Date of birth is required\\n                </ion-item>   \\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\">Sex<sup>*</sup></label>\\n              </div>\\n              <ion-list radio-group class=\\\"gender-list\\\">\\n                <ion-row>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Male\\\"> Male</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Female\\\"> Female</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md  padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Others\\\"> Others</label>\\n                    </div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-list>\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptGender.errors?.required && ptGender.dirty\\\">\\n                Gender is required\\n              </ion-item>\\n            </ion-col>\\n            <!-- <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"last_name\\\">Email<sup>*</sup></label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" name=\\\"ptEmail\\\" ngModel required #ptEmail=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"ptEmail.errors && ptEmail.dirty\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptEmail.errors?.required && ptEmail.dirty\\\">\\n                  Email is required\\n                </ion-item>\\n              </div>\\n            </ion-col> -->\\n            <!-- <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"blood_group\\\">Blood Group</label>\\n                <select class=\\\"c-form__select\\\" name=\\\"ptBloodGroup\\\" ngModel #ptBloodGroup=\\\"ngModel\\\" [class.invalid]=\\\"ptBloodGroup.errors?.required && ptBloodGroup.dirty\\\">\\n                  <option disabled>--Select--</option>\\n                  <option>O+</option>\\n                  <option>O-</option>\\n                  <option>A+</option>\\n                  <option>A-</option>\\n                  <option>B+</option>\\n                  <option>B-</option>\\n                  <option>AB+</option>\\n                  <option>AB-</option>\\n                </select>\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptBloodGroup.errors?.required && ptBloodGroup.dirty\\\">\\n                  Blood Group is required\\n                </ion-item>\\n              </div>\\n            </ion-col> -->\\n            <!-- <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\">Sex<sup>*</sup></label>\\n              </div>\\n              <ion-list radio-group class=\\\"gender-list\\\">\\n                <ion-row>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Male\\\"> Male</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Female\\\"> Female</label>\\n                    </div>\\n                  </ion-col>\\n                  <ion-col size size-md  padding-right>\\n                    <div class=\\\"c-form__field\\\">\\n                      <label class=\\\"c-form__label\\\"><input type=\\\"radio\\\" name=\\\"ptGender\\\" ngModel required #ptGender=\\\"ngModel\\\" class=\\\"c-form__radio\\\" value=\\\"Others\\\"> Others</label>\\n                    </div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-list>\\n              <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptGender.errors?.required && ptGender.dirty\\\">\\n                Gender is required\\n              </ion-item>\\n            </ion-col> -->\\n          \\n            <!-- <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"pt_mobile_no\\\">Mobile<sup>*</sup></label>\\n                <input type=\\\"number\\\" class=\\\"c-form__input\\\" class=\\\"c-form__input\\\"  name=\\\"ptMobileNo\\\" ngModel required=\\\"\\\" #ptMobileNo=\\\"ngModel\\\" [class.invalid]=\\\"ptMobileNo.errors && ptMobileNo.dirty\\\" [pattern]=\\\"mobnumPattern\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"ptMobileNo.errors?.required && ptMobileNo.dirty\\\">\\n                  Mobile Number is required\\n                </ion-item>\\n                <div *ngIf=\\\"ptMobileNo.errors && !isValidFormSubmitted\\\" [ngClass] = \\\"'error'\\\"> \\n                  <ion-item *ngIf=\\\"ptMobileNo.errors.pattern\\\" class=\\\"error-message\\\"> \\n                  Mobile number not valid.\\n                  </ion-item>  \\n                </div>\\n              </div>\\n            </ion-col> -->\\n  \\n            <!-- <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"password\\\" >Password<sup>*</sup></label>\\n                <input type=\\\"password\\\" class=\\\"c-form__input\\\" name=\\\"password\\\" ngModel required #password=\\\"ngModel\\\"\\n                  [class.invalid]=\\\"password.errors && password.dirty\\\" (blur)=\\\"checkPassword(pt_confirm_password.value,password.value)\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"password.errors?.required && password.dirty\\\">\\n                  Password is required\\n                </ion-item>\\n              </div>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" sizeMd=\\\"6\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <label class=\\\"c-form__label\\\" for=\\\"pt_confirm_password\\\">Confirm Password<sup>*</sup></label>\\n                <input type=\\\"password\\\" class=\\\"c-form__input\\\" class=\\\"c-form__input\\\" name=\\\"pt_confirm_password\\\" \\n                  ngModel required #pt_confirm_password=\\\"ngModel\\\" [class.invalid]=\\\"pt_confirm_password.errors && pt_confirm_password.dirty\\\" (blur)=\\\"checkPassword(pt_confirm_password.value,password.value)\\\">\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"pt_confirm_password.errors?.required && pt_confirm_password.dirty\\\">\\n                  Confirm Password is required\\n                </ion-item>\\n                <ion-item class=\\\"error-message\\\" *ngIf=\\\"!ConfirmPassword\\\">\\n                  Password Mismatch \\n                </ion-item>\\n              </div>\\n            </ion-col> -->\\n            <ion-col size=\\\"12\\\">\\n              <div class=\\\"c-form__field\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Create an Account</ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </form>\\n      </div>\\n      <!-- <div class=\\\"login-paragraph\\\">\\n        <div class=\\\"login-paragraph__text\\\">\\n          Already have an account? <a (click)=\\\"linkLogin()\\\" class=\\\"login-paragraph__link\\\">Login</a>\\n        </div>\\n      </div> -->\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddfamilymemberPage } from './addfamilymember.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddfamilymemberPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddfamilymemberPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddfamilymemberPageRoutingModule } from './addfamilymember-routing.module';\n\nimport { AddfamilymemberPage } from './addfamilymember.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddfamilymemberPageRoutingModule\n  ],\n  declarations: [AddfamilymemberPage]\n})\nexport class AddfamilymemberPageModule {}\n","export default \".c-card {\\n  margin-top: 120px;\\n  margin-bottom: 20px;\\n  padding: 15px;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\\n  background-color: #fff;\\n  border-radius: 15px;\\n}\\n.c-card > *:last-child {\\n  margin-bottom: 0;\\n}\\n.gender-list {\\n  padding-top: 0px;\\n  padding-bottom: 0px;\\n  background: inherit;\\n}\\nion-button {\\n  width: 100%;\\n  --ion-background-color:#0059b3;\\n  border-radius: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkZmFtaWx5bWVtYmVyL0Y6XFxzd2FzdGhcXHN3YXN0aHZpcnR1YWxwYXRpZW50L3NyY1xcYXBwXFxhZGRmYW1pbHltZW1iZXJcXGFkZGZhbWlseW1lbWJlci5wYWdlLnNjc3MiLCJzcmMvYXBwL2FkZGZhbWlseW1lbWJlci9hZGRmYW1pbHltZW1iZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSx3Q0FBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUNDSjtBREFJO0VBQ0ksZ0JBQUE7QUNFUjtBREVBO0VBQ0ksZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FDQ0o7QURFQTtFQUNJLFdBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9hZGRmYW1pbHltZW1iZXIvYWRkZmFtaWx5bWVtYmVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jLWNhcmQge1xyXG4gICAgbWFyZ2luLXRvcDogMTIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICAgID4gKjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZ2VuZGVyLWxpc3Qge1xyXG4gICAgcGFkZGluZy10b3A6IDBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xyXG59XHJcblxyXG5pb24tYnV0dG9uIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjojMDA1OWIzO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufSIsIi5jLWNhcmQge1xuICBtYXJnaW4tdG9wOiAxMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgcGFkZGluZzogMTVweDtcbiAgYm94LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbn1cbi5jLWNhcmQgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uZ2VuZGVyLWxpc3Qge1xuICBwYWRkaW5nLXRvcDogMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xufVxuXG5pb24tYnV0dG9uIHtcbiAgd2lkdGg6IDEwMCU7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IzAwNTliMztcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn0iXX0= */\";","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LoadingController, ToastController, AlertController, Platform } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { AuthService } from \"../auth.service\";\nimport { DatePipe } from '@angular/common';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { Storage } from \"@ionic/storage\";\nimport { SwasthStorageService } from '../storage/swasth-storage.service';\nimport { LoginAuthService } from '../services/login-auth.service';\nimport { Router } from '@angular/router';\nimport * as firebase from 'Firebase';\n\n@Component({\n  selector: 'app-addfamilymember',\n  templateUrl: './addfamilymember.page.html',\n  styleUrls: ['./addfamilymember.page.scss'],\n})\nexport class AddfamilymemberPage implements OnInit {\n\n  public age1: any;\n  public ConfirmPassword: any = [];\n  mobnumPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\n  CurrentDate: any;\n  familyMemberObj: any = {};\n  user: string;\n  tenantID: string;\n  userfirstLetter: string;\n  familyMembersDetails: any = {};\n  primaryUser: any;\n  familymemberId: any;\n  newLogin = \"\";\n  userType: any;\n  userdetail: any;\n  familyMemberCircleCode: any;\n  circleAdminDocDetails: any;\n  familyPrimaryMemberCircleDetails: any;\n  familyMemberFullName: any;\n  url: string;\n  randomString: string;\n  myRand: any;\n  chatRoomName: any;\n  ref = firebase.database().ref('chatrooms/');\n  currentroomKey: any;\n  data = { roomname: '' };\n\n  @Input() signUpStatus = true;\n  @Output() childStatus = new EventEmitter<boolean>();\n\n  constructor(private readonly authService: AuthService,\n    private readonly loadingController: LoadingController,\n    private readonly toastCtrl: ToastController,\n    private readonly alertCtrl: AlertController,\n    private platform: Platform, public datepipe: DatePipe,\n    jwtHelper: JwtHelperService,\n    private swStorage: SwasthStorageService,\n    private loginAuth: LoginAuthService,\n    private readonly storage: Storage,\n    private router: Router) {\n    this.ConfirmPassword = true;\n    this.CurrentDate = new Date();\n\n    // this.authService\n    // .authUser\n    // .subscribe(jwt => {\n    //   if (jwt) {\n    //     const decoded = jwtHelper.decodeToken(jwt);\n    //     this.user = decoded;\n    //     this.userType=decoded.type;\n    //     this.tenantID=decoded.TenantID;\n    //     console.log(this.user); \n    //     this.primaryUser=decoded.UID;        \n    //     this.familymemberId=decoded.UID;   \n    //   }\n    //   else {\n    //     this.user = null;\n    //   }\n    // }); \n\n    this.swStorage.getStorage(this.loginAuth.LOGINUSER_PROFILE).then(data => {\n      this.userdetail = data;\n      this.authService\n        .getCircleCode(this.userdetail.userID, this.userdetail.accountType)\n        .subscribe(data => {\n          if (data != null) {\n            this.familyMemberCircleCode = data;\n            console.log(\"Circle Code==>\", this.familyMemberCircleCode);\n\n            this.authService\n              .getCircleEntity(this.familyMemberCircleCode)\n              .subscribe(data => {\n                this.familyPrimaryMemberCircleDetails = data;\n                console.log(\"Circle Details==>\", this.familyPrimaryMemberCircleDetails);\n                this.authService\n                  .getDoctorProfile(this.familyPrimaryMemberCircleDetails.createdByUserId)\n                  .subscribe(data => {\n                    this.circleAdminDocDetails = data;\n                    console.log(\"Circle Admin Doctor Details==>\", this.circleAdminDocDetails);\n                  });\n              });\n          }\n\n\n        });\n\n\n    });\n\n    this.randomString = Math.random().toString(36).substring(7);\n    console.log(\"Random String==>\", this.randomString);\n    this.url = \"https://meet.jit.si/\" + this.randomString;\n    this.myRand = this.random();\n\n  }\n\n  async addFamilyMember(value: any) {\n    console.log(value);\n    let loading = await this.loadingController.create({\n      spinner: 'bubbles',\n      message: 'Signing up ...'\n    });\n    await loading.present();\n\n    this.familyMemberFullName = value.ptFirstName + \" \" + value.ptLastName;\n    this.familyMemberObj.ptFirstName = value.ptFirstName;\n    this.familyMemberObj.ptLastName = value.ptLastName;\n    this.familyMemberObj.ptDob = value.ptDob;\n    this.familyMemberObj.ptGender = value.ptGender;\n    this.familyMemberObj.createdByUserID = this.userdetail.userID;\n    this.familyMemberObj.createdDateTime = new Date();\n    this.familyMemberObj.status = \"Active\";\n    console.log(\"Add Family Member Object==>\", this.familyMemberObj);\n    this.authService\n      .addFamilyMember(this.familyMemberObj)\n      .pipe(finalize(() => loading.dismiss()))\n      .subscribe(\n        (jwt) => this.showSuccesToast(jwt),\n        err => this.handleError(err)\n      );\n  }\n\n  // toast controller alert\n  private async showSuccesToast(jwt) {\n    if (jwt != null) {\n      this.chatRoomName = this.circleAdminDocDetails.docFirstName + \" \" + this.circleAdminDocDetails.docLastName + \"-\" + this.familyMemberFullName + \" \" + this.myRand;\n      let newData = this.ref.push();\n      newData.set({\n        roomname: this.chatRoomName\n      });\n      this.currentroomKey = newData.key;\n      let addCircleObj: any = {\n        userID: jwt,\n        circleCode: this.familyMemberCircleCode,\n        createdDateTime: new Date(),\n        subscribePlanId: \"1\",\n        status: \"Active\",\n        subscriptionType: this.userdetail.accountType,\n        userType: \"Secondary\"\n      }\n      let createPtChatObj: any = {\n        circleCode: this.familyMemberCircleCode,\n        circleName: this.familyPrimaryMemberCircleDetails.circleName,\n        docUserID: this.circleAdminDocDetails.docUserID,\n        patientUserID: jwt,\n        patientName: this.familyMemberFullName,\n        createdByDateTime: new Date(),\n        videoCallLink: this.url,\n        status: \"Deactive\",\n        doctorName: this.circleAdminDocDetails.docFirstName + \" \" + this.circleAdminDocDetails.docLastName,\n        chatRoomName: this.chatRoomName,\n        chatRoomKey: this.currentroomKey\n      }\n\n      console.log(\"addcircle\", addCircleObj);\n      console.log(\"createchat\", createPtChatObj);\n\n      this.authService\n        .addPtToCircle(addCircleObj)\n        .subscribe(data => {\n          console.log(\"data\", data);\n          if (data != null) {\n            createPtChatObj.chatRoomKey = this.currentroomKey;\n            this.authService\n              .createPtChat(createPtChatObj)\n              .subscribe(data1 => {\n                console.log(\"data1\", data1);\n              });\n          }\n        });\n      this.router.navigateByUrl('/familymembers');\n    }\n\n    // console.log(\"Response Message======\"+jwt);\n    // if (jwt !== 'EXISTS') {      \n    //   let alert = await this.alertCtrl.create({\n    //     header: 'You have successfully registered',\n    //     message: 'This is your UID <b>'+jwt+'<b><br/><br/> Please make a note of this or else you will not be able to log in.',\n    //     buttons: [{\n    //       text: 'OK', \n    //       handler: () => {              \n    //         this.childStatus.emit(false);\n    //       }\n    //     }]\n    //   });\n    //await alert.present();\n    /*const toast = this.toastCtrl.create({\n      message: 'Sign up successful',\n      duration: 3000,\n      position: 'bottom'\n    });\n    toast.present();*/\n    // }    \n    // else {\n    //   const toast = await this.toastCtrl.create({\n    //     message: 'Username already registered',\n    //     duration: 3000,\n    //     position: 'bottom'\n    //   });\n    //   await toast.present();\n    //   // this.usernameModel.control.setErrors({'usernameTaken': true});\n    // }\n  }\n\n  async handleError(error: any) {\n    let message = `Unexpected error occurred`;\n    const toast = await this.toastCtrl.create({\n      message,\n      duration: 5000,\n      position: 'bottom'\n    });\n    await toast.present();\n  }\n\n  ngOnInit() {\n  }\n\n  // check confirm password match\n  checkPassword(value: string, value1: string) {\n    if (value != value1) {\n      this.ConfirmPassword = false;\n    }\n    else {\n      this.ConfirmPassword = true;\n    }\n  }\n\n  random(): number {\n    let rand = Math.floor(Math.random() * 20000) + 1;\n    return rand;\n  }\n\n  logout() {\n    this.loginAuth.logout();\n  }\n\n}\n"]}